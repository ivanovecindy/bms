package com.util;

import net.sf.json.JSONObject;
import net.sf.json.xml.XMLSerializer;
import org.apache.commons.codec.binary.Base64;

import java.io.FileOutputStream;


public class Test {
	public static void main(String[] args) throws Exception {
		String dd ="";

		System.out.println(dd.getBytes());
		FileOutputStream fw = new FileOutputStream("d:/ttt.jpg");
		fw.write(Base64.decodeBase64(dd.getBytes("UTF-8")));
		fw.close();
		System.out.println("---");

	}
	
	 public   String xml2JSON(String xml){
	        return new XMLSerializer().read(xml).toString();
	    }
	     
	    public   String json2XML(String json){
	        JSONObject jobj = JSONObject.fromObject(json);
	        String xml =  new XMLSerializer().write(jobj);
	        return xml;
	    }
	public static void run(int t) {

		if (t > 3) {
			 return;
		}
		// 执行操作
		System.out.println(t);
		// 递归
		run(t + 1);
	}
	static class StopMsgException extends RuntimeException {
	}
    /**
     * 补齐不足长度
     * @param length 长度
     * @param number 数字
     * @return
     */
    private String lpad(int length, int number) {
        String f = "%0" + length + "d";
        return String.format(f, number);
    }
	/**
	 * 编码
	 * @param bstr
	 * @return String
	 */
	public static String encode(byte[] bstr){
		return new sun.misc.BASE64Encoder().encode(bstr);
	}

	/**
	 * @param bytes
	 * @return
	 */
	public static String decode(final byte[] bytes) {
		return  new String(Base64.decodeBase64(bytes));
	}

	/**
	 * 二进制数据编码为BASE64字符串
	 *
	 * @param bytes
	 * @return
	 * @throws Exception
	 */
	public static  String encodes(final byte[] bytes) {
		return new String(Base64.encodeBase64(bytes));
	}
}
